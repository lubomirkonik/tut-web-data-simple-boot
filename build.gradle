apply plugin: 'war'
apply plugin: 'tomcat'
apply plugin: 'spring-boot'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'propdeps'
apply plugin: 'propdeps-maven'
apply plugin: 'propdeps-idea'
apply plugin: 'propdeps-eclipse'
apply plugin: 'eclipse-wtp'
apply plugin: 'idea'

jar {
    baseName = 'tut-web-data-simple-boot'
    version =  '0.1.0'
}

springBoot {
    mainClass = "tut.webdata.Application"
}

println "PROJECT=" + project.name

buildscript {
  repositories {
    
    jcenter()
    
    //{!mavenCentral()}
    //{!maven { url 'http://repo1.maven.org/maven2' }}
    
    maven { url "http://download.java.net/maven/2" }
    maven { url 'http://repo.spring.io/plugins-release' }
    
    //{!maven { url "http://repo.spring.io/libs-snapshot" }}
    maven { url "http://repo.spring.io/libs-milestone" }
    mavenLocal()
  }

  dependencies {
  	//{!classpath 'org.gradle.api.plugins:gradle-tomcat-plugin:1.2.4'}
  	classpath 'org.gradle.api.plugins:gradle-tomcat-plugin:1.0'
    //{!classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.6'}
    classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.4'
    
    //{!classpath("org.springframework.boot:spring-boot-gradle-plugin:1.1.2.RELEASE")}
    classpath("org.springframework.boot:spring-boot-gradle-plugin:1.0.0.RC1")
  }
}


//{!begin repos}
repositories {
  
  mavenCentral()
  
  maven { url 'http://repo.spring.io/milestone/' }
  
  //{!maven { url "http://repo.spring.io/libs-snapshot" }}
  //{!maven { url "http://repo.spring.io/libs-milestone" }}
  maven { url 'http://repo.spring.io/libs-release'}
  
  maven { url "https://repository.jboss.org/nexus/content/repositories/releases" }

  maven { url "http://dist.gemstone.com.s3.amazonaws.com/maven/release" }
  
  maven { url "https://oss.sonatype.org/content/groups/public" }
  
  maven { url "http://download.java.net/maven/2" }
  mavenLocal()
}
//{!end repos}

dependencies {
	//{!'8.0.8'}
  def tomcatVersion = '7.0.42'
  tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
          "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}"
  tomcat("org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}") {
    exclude group: 'org.eclipse.jdt.core.compiler', module: 'ecj'
  }
  
  compile 'javax.validation:validation-api:1.1.0.Final'
  //{!compile 'org.hibernate:hibernate-validator:5.0.3.Final'}
  compile 'org.hibernate:hibernate-validator:5.0.1.Final'

  //{!compile 'org.springframework:spring-core:4.0.0.RELEASE'}
  //{!compile 'org.springframework:spring-webmvc:4.0.0.RELEASE'}

  //{!compile 'org.springframework.security:spring-security-web:3.2.4.RELEASE'}
  //{!compile 'org.springframework.security:spring-security-core:3.2.4.RELEASE'}
  //{!compile 'org.springframework.security:spring-security-config:3.2.4.RELEASE'}
  //{!compile 'org.springframework.security:spring-security-taglibs:3.2.4.RELEASE'}
  compile 'org.springframework.security:spring-security-web:3.2.0.RELEASE'
  compile 'org.springframework.security:spring-security-core:3.2.0.RELEASE'
  compile 'org.springframework.security:spring-security-config:3.2.0.RELEASE'
  compile 'org.springframework.security:spring-security-taglibs:3.2.0.RELEASE'

  //{!compile 'org.slf4j:slf4j-api:1.7.6'}
  compile 'org.slf4j:slf4j-api:1.7.5'
    //{!runtime 'org.slf4j:slf4j-log4j12:1.7.5'}
  //{!runtime 'org.slf4j:jcl-over-slf4j:1.7.6'}
  runtime 'org.slf4j:jcl-over-slf4j:1.7.5'
  //{!compile 'ch.qos.logback:logback-classic:1.1.1'}
  compile 'ch.qos.logback:logback-classic:1.0.13'
  
  compile 'javax.inject:javax.inject:1'
  //{!compile 'org.aspectj:aspectjrt:1.8.0'}
  compile 'org.aspectj:aspectjrt:1.7.4'
  compile 'org.apache.geronimo.specs:geronimo-servlet_3.0_spec:1.0'
  compile 'org.codehaus.jackson:jackson-mapper-asl:1.9.13'
  compile 'com.google.guava:guava:15.0'
  compile 'jstl:jstl:1.2'
  
  //{!compile 'org.thymeleaf:thymeleaf:2.1.3.RELEASE'}
  //{!compile 'org.thymeleaf:thymeleaf-spring4:2.1.3.RELEASE'}
  //{!compile 'org.thymeleaf.extras:thymeleaf-extras-springsecurity3:2.1.1.RELEASE'}
  //{!compile 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:1.2.5'}
  compile 'org.thymeleaf:thymeleaf:2.1.2.RELEASE'
  compile 'org.thymeleaf:thymeleaf-spring4:2.1.2.RELEASE'
  compile 'org.thymeleaf.extras:thymeleaf-extras-springsecurity3:2.1.1.RELEASE'
  compile 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:1.2.1'

  //{!testCompile 'org.springframework:spring-test:4.0.5.RELEASE'}
  testCompile 'org.springframework:spring-test:4.0.0.RELEASE'
  testCompile 'junit:junit:4.11'
  testCompile "org.mockito:mockito-core:1.9.5"
    //{!testCompile "org.mockito:mockito-all:1.9.5"}
  testCompile "org.hamcrest:hamcrest-library:1.3"

  provided 'javax.servlet:javax.servlet-api:3.1.0'
  
  //{!compile("org.springframework.data:spring-data-mongodb:1.4.3.RELEASE")}
  compile("org.springframework.data:spring-data-mongodb:1.3.3.RELEASE")
  //{!compile("org.springframework.data:spring-data-jpa:1.6.0.RELEASE")}
  compile("org.springframework.data:spring-data-jpa:1.4.3.RELEASE")
  //{!compile 'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.0.Final'}
  compile 'org.hibernate.javax.persistence:hibernate-jpa-2.0-api:1.0.1.Final'
  //{!compile 'org.hibernate:hibernate-entitymanager:4.3.5.Final'}
  //{!compile 'org.hibernate:hibernate-entitymanager:4.2.13.Final'}
  compile('org.hibernate:hibernate-entitymanager:4.3.0.Final')
  //{!runtime 'com.h2database:h2:1.4.179'}
  runtime 'com.h2database:h2:1.3.175'

  //{!compile("org.springframework.data:spring-data-gemfire:1.3.3.RELEASE")}

  compile 'cglib:cglib:3.1'

  compile("org.springframework:spring-orm:4.0.0.RELEASE")
  //{!                    'spring-orm',}
  ['spring-core', 'spring-webmvc', 'spring-aop', 'spring-beans', 'spring-tx', 'spring-expression'].each {
    compile "org.springframework:$it:4.0.0.RELEASE"
  }
  compile ("org.springframework:spring-context:4.0.0.RELEASE") {
    exclude(group: 'commons-logging', module: 'commons-logging')
  }
  
  //{!compile("org.springframework.boot:spring-boot-starter-web:1.1.2.RELEASE")}
  compile("org.springframework.boot:spring-boot-starter-web:1.0.0.RC1")
  //{!mongodb}
  //{!compile("org.springframework.boot:spring-boot-starter-data-jpa:1.1.2.RELEASE")}
  compile("org.springframework.boot:spring-boot-starter-data-jpa:1.0.0.RC1")
  //{!gemfire}
  //{!compile("com.gemstone.gemfire:gemfire:7.0.1")}
}

test {
  testLogging {
    // Show that tests are run in the command-line output
    events 'started', 'passed'
  }
}

task wrapper(type: Wrapper) { gradleVersion = '1.12' }

tomcatRunWar.contextPath = ''
tomcatRunWar.httpPort = 8090
//{!tomcatRun.httpPort = 8090}

task runGF(type: JavaExec) {
  description = 'Runs a simple Gemfire Cache Server'
  main = "tut.webdata.services.LocalGemfireServer"
  classpath = sourceSets.main.runtimeClasspath
  standardInput = System.in
}